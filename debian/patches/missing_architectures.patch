Author: IOhannes m zm√∂lnig
Description: add macro to override architecture-defines for mere printout
Applied-Upstream: http://assimp.svn.sourceforge.net/viewvc/assimp?view=revision&revision=1079

--- assimp.orig/code/Importer.cpp
+++ assimp/code/Importer.cpp
@@ -898,26 +898,37 @@
 		<< "." 
 		<< aiGetVersionRevision()
 
-#if defined(ASSIMP_BUILD_X86_32BIT_ARCHITECTURE)
-		<< " x86"
-#elif defined(ASSIMP_BUILD_X86_64BIT_ARCHITECTURE)
-		<< " amd64"
-#elif defined(ASSIMP_BUILD_IA_64BIT_ARCHITECTURE)
-		<< " itanium"
-#elif defined(ASSIMP_BUILD_PPC_32BIT_ARCHITECTURE)
-		<< " ppc32"
+		<< " "
+#if defined(ASSIMP_BUILD_ARCHITECTURE)
+		<< ASSIMP_BUILD_ARCHITECTURE
+#elif defined(_M_IX86) || defined(__x86_32__) || defined(__i386__)
+		<< "x86"
+#elif defined(_M_X64) || defined(__x86_64__) 
+		<< "amd64"
+#elif defined(_M_IA64) || defined(__ia64__)
+		<< "itanium"
+#elif defined(__ppc__) || defined(__powerpc__)
+		<< "ppc32"
+#elif defined(__powerpc64__)
+		<< "ppc64"
+#elif defined(__arm__)
+		<< "arm"
 #else
-#	error unknown architecture
+		<< "<unknown architecture>"
 #endif
 
-#if defined(_MSC_VER)
-		<< " msvc"
+		<< " "
+#if defined(ASSIMP_BUILD_COMPILER)
+		<< ASSIMP_BUILD_COMPILER
+#elif defined(_MSC_VER)
+		<< "msvc"
 #elif defined(__GNUC__)
-		<< " gcc"
+		<< "gcc"
 #else
-#	error unknown compiler
+		<< "<unknown compiler>"
 #endif
 
+
 #ifndef NDEBUG
 		<< " debug"
 #endif
--- assimp.orig/include/aiDefines.h
+++ assimp/include/aiDefines.h
@@ -219,35 +219,6 @@
 #endif
 
 	//////////////////////////////////////////////////////////////////////////
-	/* ASSIMP_BUILD_XXXX_NNBIT_ARCHITECTURE */
-	//////////////////////////////////////////////////////////////////////////
-#if defined(_MSC_VER)
-	// See http://msdn.microsoft.com/en-us/library/b0084kay.
-#	if defined(_M_IX86)
-#		define ASSIMP_BUILD_X86_32BIT_ARCHITECTURE
-#	elif defined(_M_X64)
-#		define ASSIMP_BUILD_X86_64BIT_ARCHITECTURE
-#	elif defined(_M_IA64)
-#		define ASSIMP_BUILD_IA_64BIT_ARCHITECTURE
-#	else
-#		error unknown architecture
-#	endif
-#elif defined(__GNUC__)
-	// See http://gcc.gnu.org/onlinedocs/cpp/Predefined-Macros.html.
-#	if defined(__x86_32__) || defined(__i386__)
-#		define ASSIMP_BUILD_X86_32BIT_ARCHITECTURE
-#	elif defined(__x86_64__)
-#		define ASSIMP_BUILD_X86_64BIT_ARCHITECTURE
-#	elif defined(__ppc__)
-#		define ASSIMP_BUILD_PPC_32BIT_ARCHITECTURE
-#	else
-#		error unknown architecture
-#	endif
-#else
-#	error unknown compiler
-#endif
-
-	//////////////////////////////////////////////////////////////////////////
 	/* Useful constants */
 	//////////////////////////////////////////////////////////////////////////
 
@@ -265,9 +236,20 @@
 #define AI_DEG_TO_RAD(x) (x*0.0174532925f)
 #define AI_RAD_TO_DEG(x) (x*57.2957795f)
 
-/* Support for big-endian builds on Mac OS X. */
-#if defined(__APPLE__) && defined(__BIG_ENDIAN__)
-#define AI_BUILD_BIG_ENDIAN
+/* Support for big-endian builds */
+#if defined(__BYTE_ORDER__)
+#      if (__BYTE_ORDER__ == __ORDER_BIG_ENDIAN__) 
+#              if !defined(__BIG_ENDIAN__)
+#                      define __BIG_ENDIAN__
+#              endif
+#      else /* little endian */
+#              if defined (__BIG_ENDIAN__)
+#                      undef __BIG_ENDIAN__
+#              endif
+#      endif
+#endif
+#if defined(__BIG_ENDIAN__)
+#      define AI_BUILD_BIG_ENDIAN
 #endif
 
 #endif // !! INCLUDED_AI_DEFINES_H
