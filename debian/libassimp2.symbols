libassimp.so.2 libassimp2 #MINVER#
 (c++)"aiMaterial::~aiMaterial()@Base" 2.0.863
 (c++)"aiMaterial::~aiMaterial()@Base" 2.0.863
 (c++)"Assimp::NullLogger::attachStream(Assimp::LogStream*, unsigned int)@Base" 2.0.863
 (c++)"Assimp::NullLogger::detatchStream(Assimp::LogStream*, unsigned int)@Base" 2.0.863
 (c++)"Assimp::NullLogger::OnInfo(char const*)@Base" 2.0.863
 (c++)"Assimp::NullLogger::OnWarn(char const*)@Base" 2.0.863
 (c++)"Assimp::NullLogger::OnDebug(char const*)@Base" 2.0.863
 (c++)"Assimp::NullLogger::OnError(char const*)@Base" 2.0.863
 (c++)"Assimp::NullLogger::~NullLogger()@Base" 2.0.863
 (c++)"Assimp::NullLogger::~NullLogger()@Base" 2.0.863
 (c++)"Assimp::NullLogger::~NullLogger()@Base" 2.0.863
 (c++)"Assimp::DefaultLogger::GetThreadID()@Base" 2.0.863
 (c++)"Assimp::DefaultLogger::attachStream(Assimp::LogStream*, unsigned int)@Base" 2.0.863
 (c++)"Assimp::DefaultLogger::isNullLogger()@Base" 2.0.863
 (c++)"Assimp::DefaultLogger::detatchStream(Assimp::LogStream*, unsigned int)@Base" 2.0.863
 (c++)"Assimp::DefaultLogger::s_pNullLogger@Base" 2.0.863
 (c++)"Assimp::DefaultLogger::WriteToStreams(char const*, Assimp::Logger::ErrorSeverity)@Base" 2.0.863
 (c++)"Assimp::DefaultLogger::get()@Base" 2.0.863
 (c++)"Assimp::DefaultLogger::set(Assimp::Logger*)@Base" 2.0.863
 (c++)"Assimp::DefaultLogger::kill()@Base" 2.0.863
 (c++)"Assimp::DefaultLogger::OnInfo(char const*)@Base" 2.0.863
 (c++)"Assimp::DefaultLogger::OnWarn(char const*)@Base" 2.0.863
 (c++)"Assimp::DefaultLogger::create(char const*, Assimp::Logger::LogSeverity, unsigned int, Assimp::IOSystem*)@Base" 2.0.863
 (c++)"Assimp::DefaultLogger::OnDebug(char const*)@Base" 2.0.863
 (c++)"Assimp::DefaultLogger::OnError(char const*)@Base" 2.0.863
 (c++)"Assimp::DefaultLogger::m_pLogger@Base" 2.0.863
 (c++)"Assimp::DefaultLogger::DefaultLogger(Assimp::Logger::LogSeverity)@Base" 2.0.863
 (c++)"Assimp::DefaultLogger::DefaultLogger(Assimp::Logger::LogSeverity)@Base" 2.0.863
 (c++)"Assimp::DefaultLogger::~DefaultLogger()@Base" 2.0.863
 (c++)"Assimp::DefaultLogger::~DefaultLogger()@Base" 2.0.863
 (c++)"Assimp::DefaultLogger::~DefaultLogger()@Base" 2.0.863
 (c++)"Assimp::ProgressHandler::~ProgressHandler()@Base" 2.0.863
 (c++)"Assimp::ProgressHandler::~ProgressHandler()@Base" 2.0.863
 (c++)"Assimp::ProgressHandler::~ProgressHandler()@Base" 2.0.863
 (c++)"Assimp::Intern::AllocateFromAssimpHeap::operator delete[](void*)@Base" 2.0.863
 (c++)"Assimp::Intern::AllocateFromAssimpHeap::operator delete(void*)@Base" 2.0.863
 (c++|subst)"Assimp::Intern::AllocateFromAssimpHeap::operator new[]({c++:size_t})@Base" 2.0.863
 (c++|subst)"Assimp::Intern::AllocateFromAssimpHeap::operator new[]({c++:size_t}, std::nothrow_t const&)@Base" 2.0.863
 (c++|subst)"Assimp::Intern::AllocateFromAssimpHeap::operator new({c++:size_t})@Base" 2.0.863
 (c++|subst)"Assimp::Intern::AllocateFromAssimpHeap::operator new({c++:size_t}, std::nothrow_t const&)@Base" 2.0.863
 (c++)"Assimp::Logger::info(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 2.0.863
 (c++)"Assimp::Logger::warn(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 2.0.863
 (c++)"Assimp::Logger::debug(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 2.0.863
 (c++)"Assimp::Logger::error(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 2.0.863
 (c++)"Assimp::Logger::~Logger()@Base" 2.0.863
 (c++)"Assimp::Logger::~Logger()@Base" 2.0.863
 (c++)"Assimp::Logger::~Logger()@Base" 2.0.863
 (c++)"Assimp::IOStream::~IOStream()@Base" 2.0.863
 (c++)"Assimp::IOStream::~IOStream()@Base" 2.0.863
 (c++)"Assimp::IOStream::~IOStream()@Base" 2.0.863
 (c++)"Assimp::IOSystem::~IOSystem()@Base" 2.0.863
 (c++)"Assimp::IOSystem::~IOSystem()@Base" 2.0.863
 (c++)"Assimp::IOSystem::~IOSystem()@Base" 2.0.863
 (c++)"Assimp::Importer::SetIOHandler(Assimp::IOSystem*)@Base" 2.0.863
 (c++)"Assimp::Importer::RegisterLoader(Assimp::BaseImporter*)@Base" 2.0.863
 (c++)"Assimp::Importer::RegisterPPStep(Assimp::BaseProcess*)@Base" 2.0.863
 (c++)"Assimp::Importer::SetExtraVerbose(bool)@Base" 2.0.863
 (c++)"Assimp::Importer::GetOrphanedScene()@Base" 2.0.863
 (c++)"Assimp::Importer::SetPropertyFloat(char const*, float, bool*)@Base" 2.0.863
 (c++)"Assimp::Importer::UnregisterLoader(Assimp::BaseImporter*)@Base" 2.0.863
 (c++)"Assimp::Importer::UnregisterPPStep(Assimp::BaseProcess*)@Base" 2.0.863
 (c++)"Assimp::Importer::SetPropertyString(char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool*)@Base" 2.0.863
 (c++|subst)"Assimp::Importer::ReadFileFromMemory(void const*, {c++:size_t}, unsigned int, char const*)@Base" 2.0.863
 (c++)"Assimp::Importer::SetProgressHandler(Assimp::ProgressHandler*)@Base" 2.0.863
 (c++)"Assimp::Importer::SetPropertyInteger(char const*, int, bool*)@Base" 2.0.863
 (c++)"Assimp::Importer::ApplyPostProcessing(unsigned int)@Base" 2.0.863
 (c++)"Assimp::Importer::ReadFile(char const*, unsigned int)@Base" 2.0.863
 (c++)"Assimp::Importer::FreeScene()@Base" 2.0.863
 (c++)"Assimp::Importer::Importer(Assimp::Importer const&)@Base" 2.0.863
 (c++)"Assimp::Importer::Importer()@Base" 2.0.863
 (c++)"Assimp::Importer::Importer(Assimp::Importer const&)@Base" 2.0.863
 (c++)"Assimp::Importer::Importer()@Base" 2.0.863
 (c++)"Assimp::Importer::~Importer()@Base" 2.0.863
 (c++)"Assimp::Importer::~Importer()@Base" 2.0.863
 (c++)"Assimp::LogStream::createDefaultStream(aiDefaultLogStream, char const*, Assimp::IOSystem*)@Base" 2.0.863
 (c++)"Assimp::LogStream::~LogStream()@Base" 2.0.863
 (c++)"Assimp::LogStream::~LogStream()@Base" 2.0.863
 (c++)"Assimp::LogStream::~LogStream()@Base" 2.0.863
 (c++)"Assimp::IOSystem::ComparePaths(char const*, char const*) const@Base" 2.0.863
 (c++)"Assimp::Importer::FindLoader(char const*) const@Base" 2.0.863
 (c++)"Assimp::Importer::GetIOHandler() const@Base" 2.0.863
 (c++)"Assimp::Importer::ValidateFlags(unsigned int) const@Base" 2.0.863
 (c++)"Assimp::Importer::GetErrorString() const@Base" 2.0.863
 (c++)"Assimp::Importer::GetExtensionList(aiString&) const@Base" 2.0.863
 (c++)"Assimp::Importer::GetPropertyFloat(char const*, float) const@Base" 2.0.863
 (c++)"Assimp::Importer::GetPropertyString(char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const@Base" 2.0.863
 (c++)"Assimp::Importer::GetProgressHandler() const@Base" 2.0.863
 (c++)"Assimp::Importer::GetPropertyInteger(char const*, int) const@Base" 2.0.863
 (c++)"Assimp::Importer::IsDefaultIOHandler() const@Base" 2.0.863
 (c++)"Assimp::Importer::IsExtensionSupported(char const*) const@Base" 2.0.863
 (c++)"Assimp::Importer::GetMemoryRequirements(aiMemoryInfo&) const@Base" 2.0.863
 (c++)"Assimp::Importer::IsDefaultProgressHandler() const@Base" 2.0.863
 (c++)"Assimp::Importer::GetScene() const@Base" 2.0.863
 (c++|subst|optional=templinst)"Assimp::Blender::MDeformVert* std::vector<Assimp::Blender::MDeformVert, std::allocator<Assimp::Blender::MDeformVert> >::_M_allocate_and_copy<__gnu_cxx::__normal_iterator<Assimp::Blender::MDeformVert const*, std::vector<Assimp::Blender::MDeformVert, std::allocator<Assimp::Blender::MDeformVert> > > >({c++:size_t}, __gnu_cxx::__normal_iterator<Assimp::Blender::MDeformVert const*, std::vector<Assimp::Blender::MDeformVert, std::allocator<Assimp::Blender::MDeformVert> > >, __gnu_cxx::__normal_iterator<Assimp::Blender::MDeformVert const*, std::vector<Assimp::Blender::MDeformVert, std::allocator<Assimp::Blender::MDeformVert> > >)@Base" 2.0.863
 (c++)"aiVectorKey* std::__move_merge<__gnu_cxx::__normal_iterator<aiVectorKey*, std::vector<aiVectorKey, std::allocator<aiVectorKey> > >, __gnu_cxx::__normal_iterator<aiVectorKey*, std::vector<aiVectorKey, std::allocator<aiVectorKey> > >, aiVectorKey*>(__gnu_cxx::__normal_iterator<aiVectorKey*, std::vector<aiVectorKey, std::allocator<aiVectorKey> > >, __gnu_cxx::__normal_iterator<aiVectorKey*, std::vector<aiVectorKey, std::allocator<aiVectorKey> > >, __gnu_cxx::__normal_iterator<aiVectorKey*, std::vector<aiVectorKey, std::allocator<aiVectorKey> > >, __gnu_cxx::__normal_iterator<aiVectorKey*, std::vector<aiVectorKey, std::allocator<aiVectorKey> > >, aiVectorKey*)@Base" 2.0.863
 (c++)"aiQuatKey* std::__move_merge<__gnu_cxx::__normal_iterator<aiQuatKey*, std::vector<aiQuatKey, std::allocator<aiQuatKey> > >, __gnu_cxx::__normal_iterator<aiQuatKey*, std::vector<aiQuatKey, std::allocator<aiQuatKey> > >, aiQuatKey*>(__gnu_cxx::__normal_iterator<aiQuatKey*, std::vector<aiQuatKey, std::allocator<aiQuatKey> > >, __gnu_cxx::__normal_iterator<aiQuatKey*, std::vector<aiQuatKey, std::allocator<aiQuatKey> > >, __gnu_cxx::__normal_iterator<aiQuatKey*, std::vector<aiQuatKey, std::allocator<aiQuatKey> > >, __gnu_cxx::__normal_iterator<aiQuatKey*, std::vector<aiQuatKey, std::allocator<aiQuatKey> > >, aiQuatKey*)@Base" 2.0.863
 (c++)"Assimp::D3DS::aiFloatKey* std::__move_merge<__gnu_cxx::__normal_iterator<Assimp::D3DS::aiFloatKey*, std::vector<Assimp::D3DS::aiFloatKey, std::allocator<Assimp::D3DS::aiFloatKey> > >, __gnu_cxx::__normal_iterator<Assimp::D3DS::aiFloatKey*, std::vector<Assimp::D3DS::aiFloatKey, std::allocator<Assimp::D3DS::aiFloatKey> > >, Assimp::D3DS::aiFloatKey*>(__gnu_cxx::__normal_iterator<Assimp::D3DS::aiFloatKey*, std::vector<Assimp::D3DS::aiFloatKey, std::allocator<Assimp::D3DS::aiFloatKey> > >, __gnu_cxx::__normal_iterator<Assimp::D3DS::aiFloatKey*, std::vector<Assimp::D3DS::aiFloatKey, std::allocator<Assimp::D3DS::aiFloatKey> > >, __gnu_cxx::__normal_iterator<Assimp::D3DS::aiFloatKey*, std::vector<Assimp::D3DS::aiFloatKey, std::allocator<Assimp::D3DS::aiFloatKey> > >, __gnu_cxx::__normal_iterator<Assimp::D3DS::aiFloatKey*, std::vector<Assimp::D3DS::aiFloatKey, std::allocator<Assimp::D3DS::aiFloatKey> > >, Assimp::D3DS::aiFloatKey*)@Base" 2.0.863
 (c++|optional=templinst)"aiQuatKey* std::__copy_move_a<false, aiQuatKey*, aiQuatKey*>(aiQuatKey*, aiQuatKey*, aiQuatKey*)@Base" 2.0.863
 (c++|optional=templinst)"Assimp::NFFImporter::MeshInfo* std::copy_backward<Assimp::NFFImporter::MeshInfo*, Assimp::NFFImporter::MeshInfo*>(Assimp::NFFImporter::MeshInfo*, Assimp::NFFImporter::MeshInfo*, Assimp::NFFImporter::MeshInfo*)@Base" 2.0.863
 (c++|optional=templinst)"aiVectorKey* std::__copy_move_backward_a<false, aiVectorKey*, aiVectorKey*>(aiVectorKey*, aiVectorKey*, aiVectorKey*)@Base" 2.0.863
 (c++|optional=templinst)"aiQuatKey* std::__copy_move_backward_a<false, aiQuatKey*, aiQuatKey*>(aiQuatKey*, aiQuatKey*, aiQuatKey*)@Base" 2.0.863
 (c++|optional=templinst)"aiMatrix4x4* std::__uninitialized_move_a<aiMatrix4x4*, aiMatrix4x4*, std::allocator<aiMatrix4x4> >(aiMatrix4x4*, aiMatrix4x4*, aiMatrix4x4*, std::allocator<aiMatrix4x4>&)@Base" 2.0.863
 aiApplyPostProcessing@Base 2.0.863
 aiAttachLogStream@Base 2.0.863
 aiCreateQuaternionFromMatrix@Base 2.0.863
 aiDecomposeMatrix@Base 2.0.863
 aiDetachAllLogStreams@Base 2.0.863
 aiDetachLogStream@Base 2.0.863
 aiEnableVerboseLogging@Base 2.0.863
 aiGetCompileFlags@Base 2.0.863
 aiGetErrorString@Base 2.0.863
 aiGetExtensionList@Base 2.0.863
 aiGetLegalString@Base 2.0.863
 aiGetMaterialColor@Base 2.0.863
 aiGetMaterialFloatArray@Base 2.0.863
 aiGetMaterialIntegerArray@Base 2.0.863
 aiGetMaterialProperty@Base 2.0.863
 aiGetMaterialString@Base 2.0.863
 aiGetMaterialTexture@Base 2.0.863
 aiGetMaterialTextureCount@Base 2.0.863
 aiGetMemoryRequirements@Base 2.0.863
 aiGetPredefinedLogStream@Base 2.0.863
 aiGetVersionMajor@Base 2.0.863
 aiGetVersionMinor@Base 2.0.863
 aiGetVersionRevision@Base 2.0.863
 aiIdentityMatrix3@Base 2.0.863
 aiIdentityMatrix4@Base 2.0.863
 aiImportFile@Base 2.0.863
 aiImportFileEx@Base 2.0.863
 aiImportFileFromMemory@Base 2.0.863
 aiIsExtensionSupported@Base 2.0.863
 aiMultiplyMatrix3@Base 2.0.863
 aiMultiplyMatrix4@Base 2.0.863
 aiReleaseImport@Base 2.0.863
 aiSetImportPropertyFloat@Base 2.0.863
 aiSetImportPropertyInteger@Base 2.0.863
 aiSetImportPropertyString@Base 2.0.863
 aiTransformVecByMatrix3@Base 2.0.863
 aiTransformVecByMatrix4@Base 2.0.863
 aiTransposeMatrix3@Base 2.0.863
 aiTransposeMatrix4@Base 2.0.863
